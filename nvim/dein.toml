[[plugins]]
repo = 'itchyny/lightline.vim'

#[[plugins]]
#repo = 'Shougo/deoplete.nvim'

[[plugins]]
repo = 'neomake/neomake'

[[plugins]]
repo= 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'cohama/lexima.vim'

#[[plugins]]
#repo = 'Shougo/context_filetype.vim'
#
#[[plugins]]
#repo = 'Shougo/neosnippet.vim'
#depends = ['neosnippet-snippets', 'context_filetype.vim']
#on_event = 'InsertCharPre'
#on_ft = 'snippet'


#[[plugins]]
#repo = 'Shougo/neocomplete.vim'
#depends = 'context_filetype.vim'
#hook_add= '''
#  " Use neocomplete.
#  let g:neocomplete#enable_at_startup = 1
#  if !exists('g:neocomplete#keyword_patterns')
#    let g:neocomplete#keyword_patterns = {}
#  endif
#  let g:neocomplete#keyword_patterns._ = '\h\w*'
#  
#  if !exists('g:neocomplete#sources#dictionary#dictionaries')
#    let g:neocomplete#sources#dictionary#dictionaries = {}
#  endif
#  let dict = g:neocomplete#sources#dictionary#dictionaries
#  
#  let g:neocomplete#sources#buffer#disabled_pattern = '\.log\|\.log\.\|\.jax\|Log.txt'
#  let g:neocomplete#enable_ignore_case = 0
#  let g:neocomplete#enable_smart_case  = 1
#  let g:neocomplete#enable_fuzzy_completion = 0
#  
#  call neocomplete#custom_source('_', 'sorters',  ['sorter_length'])
#  call neocomplete#custom_source('_', 'matchers', ['matcher_head'])
#  
#  inoremap <expr><C-n>  pumvisible() ? "\<C-n>" : "\<C-x>\<C-u>\<C-p>"
#  inoremap <expr><CR>   pumvisible() ? "\<C-n>" . neocomplete#close_popup()  : "<CR>"
#  inoremap <expr><C-e>  pumvisible() ? neocomplete#close_popup() : "<End>"
#  inoremap <expr><C-c>  neocomplete#cancel_popup()
#  inoremap <expr><C-u>  neocomplete#undo_completion()
#  inoremap <expr><C-h>  neocomplete#smart_close_popup()."\<C-h>"
#'''

